version: "3.8"

services:
    redis:
        image: redis:alpine
        container_name: "redis-${APP_NAME}"
        restart: unless-stopped
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        volumes:
            - ./redis/data:/data
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - mynetwork
    mysql:
        build: mysql
        container_name: "mysql-${APP_NAME}"
        image: "mysql:${APP_NAME}"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
        ports:
            - "${MYSQL_PORT}:3306"
        volumes:
            - ./mysql/data:/var/lib/mysql
            - ./mysql/log:/var/log
        networks:
            - mynetwork
    php:
        build: php
        container_name: "php-${APP_NAME}"
        restart: unless-stopped
        image: "php:${APP_NAME}"
        ports:
            - "${PHP_PORT}:80"
        environment:
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MAIL_MAILER: "${MAIL_MAILER}"
            MAIL_HOST: "${MAIL_HOST}"
            MAIL_PORT: "${MAIL_PORT}"
            MAIL_USERNAME: "${MAIL_USERNAME}"
            MAIL_PASSWORD: "${MAIL_PASSWORD}"
            MAIL_ENCRYPTION: "${MAIL_ENCRYPTION}"
            MAIL_FROM_ADDRESS: "${MAIL_FROM_ADDRESS}"
            APP_REPOSITORY: "${APP_REPOSITORY}"
        volumes:
            - ./../app:/var/www
            - ./php/log:/var/log
        command:
            - /tmp/scripts/init.sh
        depends_on:
            - mysql
            - redis
        networks:
            - mynetwork
    proxy:
        image: nginx:alpine
        container_name: "nginx-${APP_NAME}"
        restart: unless-stopped
        ports:
            - "${PROXY_PORT}:80"
        environment:
            APP_NAME: "${APP_NAME}"
        volumes:
            - ./../app:/var/www
            - ./proxy/config:/etc/nginx/conf.d/
            - ./proxy/log:/var/log/nginx  
        depends_on:
            - php
        networks:
            - mynetwork
networks:
    mynetwork:
        name: ${APP_NAME}
        driver: bridge